# This file contains common pin mappings for the BigTreeTech Octopus
# and Octopus Pro boards. To use this config, start by identifying the
# micro-controller on the board - it may be an STM32F446, STM32F429,
# or an STM32H723.  Select the appropriate micro-controller in "make
# menuconfig" and select "Enable low-level configuration options". For
# STM32F446 boards the firmware should be compiled with a "32KiB
# bootloader" and a "12MHz crystal" clock reference. For STM32F429
# boards use a "32KiB bootloader" and an "8MHz crystal". For STM32H723
# boards use a "128KiB bootloader" and a "25Mhz crystal".

# See docs/Config_Reference.md for a description of parameters.


# MCUs configuration
[mcu] 
#restart_method: command
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_280020000F51313236343430-if00

[mcu EBB]
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044506108DD901C-if00 
#canbus_uuid: 913887ca9909

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#  General Printer definition
[printer]
kinematics: corexy
max_velocity: 300 #max_accel: 10000
max_accel: 3240
#max_accel_to_decel: 5500
max_z_velocity: 15 #30
max_z_accel: 350 #350
square_corner_velocity: 5.0

[probe]
##  TAP
pin: EBB:gpio13
x_offset: 0
y_offset: 0
z_offset: 0
speed: 7
lift_speed: 30.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
[safe_z_home]
home_xy_position: 175, 175 # Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
speed: 200
z_hop: 10

[include mainsail.cfg]

########################################
# Probe Offset
########################################
#[probe]
#z_offset: -0.735

#max_ac
#[gcode_arcs]

# Steppers & Extruders
[include stepper_kinematics.cfg]
[include extruders.cfg]

# EBB sb2209 usb
[include EBB_sb2209_usb.cfg]

# Heaters
[include heaters.cfg]

# Pressure advance
#[include pressure_advance.cfg]

# Fans & Temps
[include fans_temps.cfg]

# Probing & Levelling & Homing
[include probe_qgl.cfg]
[include bed_mesh.cfg]
[include macro_bed_mesh_adaptive.cfg]

# Light
[include stealthburner_leds.cfg] 
[include caselight.cfg] 

# Power 
#[include power.cfg]

# Virtual SD Card
[virtual_sdcard]
path: /home/rpi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# Macros 
[include macros.cfg]
[include nozzle_scrub.cfg]
#[include macros/calibration/calibrate.cfg]
#[include macros/calibration/pa_calibrate.cfg]
#[include macros/calibration/flow_calibrate.cfg]


#####################################################################
#	LED Control
#####################################################################

[neopixel caselight]
pin: PB10
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 63
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

[exclude_object]

[respond]

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

[input_shaper]
shaper_freq_x: 45.2
shaper_type_x: mzv
shaper_freq_y: 32.4
shaper_type_y: mzv



#####################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner]
#*# mode = touch
#*# scanner_touch_threshold = 2000
#*# scanner_touch_speed = 3
#*# scanner_touch_z_offset = 0.150
#*#
#*# [scanner model default]
#*# model_coef = 1.4271237900749643,
#*# 	1.8600925853208534,
#*# 	0.7349388516131008,
#*# 	0.3153543793666147,
#*# 	0.4675706680851494,
#*# 	0.4970006954157715,
#*# 	-0.36792938618910287,
#*# 	-0.5058848329773983,
#*# 	0.2891303159597417,
#*# 	0.285428359441056
#*# model_domain = 3.187174070396295e-07,3.3040158948099633e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 30.971712
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.1.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.012037, -0.002100, -0.010757, -0.007458, 0.001056, 0.000028, -0.009120, -0.017633, -0.019663, -0.013588, 0.000429, 0.014696, 0.015387
#*# 	  0.013285, -0.005937, -0.016916, -0.015399, -0.003769, -0.001119, -0.008315, -0.015776, -0.016780, -0.013292, -0.000059, 0.013041, 0.014323
#*# 	  0.014504, -0.008034, -0.025039, -0.023740, -0.007531, -0.001610, -0.006415, -0.012001, -0.012805, -0.010165, -0.002546, 0.009986, 0.012503
#*# 	  0.013021, -0.012777, -0.031657, -0.030364, -0.011210, -0.000955, -0.005364, -0.006849, -0.008188, -0.007053, -0.000012, 0.008900, 0.009028
#*# 	  0.013215, -0.012789, -0.034136, -0.035159, -0.018252, -0.006632, -0.005415, -0.005254, -0.002079, -0.002171, 0.002241, 0.007917, 0.007917
#*# 	  0.013052, -0.014088, -0.035811, -0.040106, -0.022987, -0.008678, -0.002415, -0.002255, -0.003766, -0.005368, 0.003640, 0.010970, 0.008984
#*# 	  0.010195, -0.013938, -0.034153, -0.039694, -0.024093, -0.009145, -0.000464, 0.000055, -0.006411, -0.013280, -0.003348, 0.006682, 0.006612
#*# 	  0.002580, -0.018284, -0.034813, -0.036639, -0.022955, -0.011655, -0.006070, -0.007546, -0.015895, -0.023590, -0.011559, 0.000219, -0.000272
#*# 	  0.000408, -0.016237, -0.030489, -0.028698, -0.015516, -0.009319, -0.007672, -0.011197, -0.019290, -0.028367, -0.019316, -0.006369, -0.004957
#*# 	  -0.002122, -0.014422, -0.024100, -0.020730, -0.006651, -0.001055, -0.004102, -0.010622, -0.018274, -0.026043, -0.017468, -0.005166, -0.005187
#*# 	  0.002439, -0.007038, -0.014242, -0.009428, 0.004455, 0.009300, 0.005367, -0.003437, -0.012329, -0.020351, -0.013761, -0.002712, -0.002846
#*# 	  0.006912, -0.002370, -0.007587, -0.001664, 0.012012, 0.016411, 0.012009, 0.002887, -0.008240, -0.016584, -0.009255, -0.000839, -0.000072
#*# x_count = 13
#*# y_count = 12
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 118.0
#*# max_x = 232.0
#*# min_y = 118.0
#*# max_y = 232.0
